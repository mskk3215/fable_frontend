name: Frontend's Deploy CI/CD

on:
  push: # Trigger the workflow on push events
    branches: ["main"]
env:
  AWS_REGION: ap-northeast-1
  ECS_SERVICE: fable-production-frontend
  ECS_CLUSTER: fable-production-cluster
  ECS_TASK_DEFINITION: .aws/task-definition.json

permissions:
  contents: read

jobs:
  # frontend Container Build/Test
  frontend-test-build-image: # title of the job
    name: Frontend Container - Test and Build # name of GitHub Action
    runs-on: ubuntu-20.04 # environment for job to run on
    timeout-minutes: 10
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3 # checkout the repo
      ## Build/Test and Docker Image Build
      - name: Build an Image and Run Tests
        run: |
          docker image build -t cicd-frontend:latest .
      ## Login AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      ## Push image to ECR
      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_FRONTEND_SERVER_REPOSITORY }}
        run: |
          docker tag cicd-frontend:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  # Deploy
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    needs: [frontend-test-build-image] # このjobが実行される前に実行されるjobを指定

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      ## Login AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      ## Edit Task Definition
      - name: Fill in the new image ID in the Amazon ECS task definition for web
        id: render-frontend-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: frontend
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_FRONTEND_SERVER_REPOSITORY }} # task definitionのimageをこれに更新
      ## Push to ECS
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-frontend-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true # wait for the service to become stable
